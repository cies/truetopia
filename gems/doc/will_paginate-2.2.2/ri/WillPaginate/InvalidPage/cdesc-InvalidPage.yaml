--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::H 
  level: 1
  text: Invalid page number error
- !ruby/struct:SM::Flow::P 
  body: This is an ArgumentError raised in case a page was requested that is either zero or negative number. You should decide how do deal with such errors in the controller.
- !ruby/struct:SM::Flow::P 
  body: "If you're using Rails 2, then this error will automatically get handled like 404 Not Found. The hook is in &quot;will_paginate.rb&quot;:"
- !ruby/struct:SM::Flow::VERB 
  body: "  ActionController::Base.rescue_responses['WillPaginate::InvalidPage'] = :not_found\n"
- !ruby/struct:SM::Flow::P 
  body: If you don't like this, use your preffered method of rescuing exceptions in public from your controllers to handle this differently. The <tt>rescue_from</tt> method is a nice addition to Rails 2.
- !ruby/struct:SM::Flow::P 
  body: This error is <b>not</b> raised when a page further than the last page is requested. Use <tt>WillPaginate::Collection#out_of_bounds?</tt> method to check for those cases and manually deal with them as you see fit.
constants: []

full_name: WillPaginate::InvalidPage
includes: []

instance_methods: []

name: InvalidPage
superclass: ArgumentError
